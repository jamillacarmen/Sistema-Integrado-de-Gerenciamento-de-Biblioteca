
package view;

import DAO.*;
import model.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.Color;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.JOptionPane;
import model.Gestor;
import model.Bibliotecario;
import java.util.List;

import model.Atividade;
import java.awt.BorderLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;

/**
 * Janela principal do administrador do sistema.
 * Gerencia utilizadores (gestores e bibliotecários) e monitora atividades do sistema.
 * Permite registrar, visualizar e remover utilizadores, além de acompanhar logs de atividades.
 */

public class MenuAdm extends javax.swing.JFrame {
    
    private GestorDAO gestorDAO = new GestorDAO();
    private BibliotecarioDAO bibliotecarioDAO = new BibliotecarioDAO();
    private AtividadeDAO atividadeDAO = new AtividadeDAO();
     private JComboBox<String> comboFiltro;
    
    
   
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(MenuAdm.class.getName());

    /**
     * Creates new form MenuAdm
     */
    
    /**
     * Construtor que inicializa a interface do administrador.
     * Configura painéis, carrega dados iniciais e configura componentes.
     */
    public MenuAdm() {
        initComponents();
        
        setLocationRelativeTo(null);
    setResizable(false);
    
    this.setTitle("Administrador - JAMILA SIGB");
        carregarTabelaUtilizadores();
        configurarComboBoxCargo();
        configurarPainelAtividades();
        carregarTabelaAtividades();
        
      
    configurarFiltros();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tab1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tab2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tab3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        SairLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtPesquisar = new javax.swing.JTextField();
        lupaLabel = new javax.swing.JLabel();
        jP01 = new javax.swing.JPanel();
        UtilizadoresPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        UtilizadorTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        RegistrarUtilizadoresPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        AtividadeGestPanel = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaAtividades = new javax.swing.JTable();
        btnLimparFiltro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(94, 42, 43));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tab1.setBackground(new java.awt.Color(94, 42, 43));
        tab1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tab1MouseEntered(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(201, 169, 154));
        jLabel2.setText("Utilizadores");

        javax.swing.GroupLayout tab1Layout = new javax.swing.GroupLayout(tab1);
        tab1.setLayout(tab1Layout);
        tab1Layout.setHorizontalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab1Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(29, 29, 29))
        );
        tab1Layout.setVerticalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(tab1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 140, 30));

        tab2.setBackground(new java.awt.Color(94, 42, 43));
        tab2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tab2MouseEntered(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(201, 169, 154));
        jLabel3.setText("Registrar utilizadores");

        javax.swing.GroupLayout tab2Layout = new javax.swing.GroupLayout(tab2);
        tab2.setLayout(tab2Layout);
        tab2Layout.setHorizontalGroup(
            tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18))
        );
        tab2Layout.setVerticalGroup(
            tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jPanel1.add(tab2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 140, 30));

        tab3.setBackground(new java.awt.Color(94, 42, 43));
        tab3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tab3MouseEntered(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(201, 169, 154));
        jLabel6.setText("   Atividades");

        javax.swing.GroupLayout tab3Layout = new javax.swing.GroupLayout(tab3);
        tab3.setLayout(tab3Layout);
        tab3Layout.setHorizontalGroup(
            tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab3Layout.createSequentialGroup()
                .addGap(0, 18, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        tab3Layout.setVerticalGroup(
            tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab3Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jPanel1.add(tab3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 140, 30));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/SIGBlogo200x200.png"))); // NOI18N
        jLabel16.setText("jLabel16");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(-50, 0, 190, 110));

        SairLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/Exit50x85.png"))); // NOI18N
        SairLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SairLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SairLabelMouseEntered(evt);
            }
        });
        jPanel1.add(SairLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, -1, 80));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 141, 470));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(94, 42, 43));

        txtPesquisar.setBackground(new java.awt.Color(94, 42, 43));
        txtPesquisar.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        txtPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        txtPesquisar.setText("Pesquisar...");
        txtPesquisar.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(201, 169, 154)));
        txtPesquisar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtPesquisarMousePressed(evt);
            }
        });
        txtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisarActionPerformed(evt);
            }
        });

        lupaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/Lupa35x35.png"))); // NOI18N
        lupaLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lupaLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lupaLabelMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lupaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lupaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        jP01.setBackground(new java.awt.Color(255, 255, 255));
        jP01.setLayout(new java.awt.CardLayout());

        UtilizadoresPanel.setBackground(new java.awt.Color(255, 255, 255));
        UtilizadoresPanel.setMaximumSize(new java.awt.Dimension(0, 0));
        UtilizadoresPanel.setPreferredSize(new java.awt.Dimension(770, 406));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        UtilizadorTable.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        UtilizadorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "ID", "Nome", "Contacto", "Cargo"}
        ) {
            public boolean isCellEditable(int row, int column) {
                return false; // Torna a tabela não editável
            }
        }
    );
    UtilizadorTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            UtilizadorTableMouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            UtilizadorTableMouseEntered(evt);
        }
    });
    jScrollPane1.setViewportView(UtilizadorTable);
    DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
    headerRenderer.setBackground(new java.awt.Color(201, 169, 154));
    headerRenderer.setForeground(new java.awt.Color(94,42,43));
    headerRenderer.setFont(new java.awt.Font("Times New Roman", java.awt.Font.ITALIC, 14));

    // Aplica em todas as colunas do cabeçalho
    for (int i = 0; i < UtilizadorTable.getColumnModel().getColumnCount(); i++) {
        UtilizadorTable.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
    }

    jButton1.setBackground(new java.awt.Color(201, 169, 154));
    jButton1.setForeground(new java.awt.Color(94, 43, 42));
    jButton1.setText("Remover");
    jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jButton1MouseEntered(evt);
        }
    });
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout UtilizadoresPanelLayout = new javax.swing.GroupLayout(UtilizadoresPanel);
    UtilizadoresPanel.setLayout(UtilizadoresPanelLayout);
    UtilizadoresPanelLayout.setHorizontalGroup(
        UtilizadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(UtilizadoresPanelLayout.createSequentialGroup()
            .addGroup(UtilizadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(UtilizadoresPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(UtilizadoresPanelLayout.createSequentialGroup()
                    .addGap(299, 299, 299)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(42, Short.MAX_VALUE))
    );
    UtilizadoresPanelLayout.setVerticalGroup(
        UtilizadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(UtilizadoresPanelLayout.createSequentialGroup()
            .addGap(19, 19, 19)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jP01.add(UtilizadoresPanel, "card2");

    RegistrarUtilizadoresPanel.setBackground(new java.awt.Color(255, 255, 255));
    RegistrarUtilizadoresPanel.setPreferredSize(new java.awt.Dimension(770, 406));

    jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    jLabel9.setForeground(new java.awt.Color(94, 42, 43));
    jLabel9.setText("Nome:");

    jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    jLabel12.setForeground(new java.awt.Color(94, 42, 43));
    jLabel12.setText("BI:");

    jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    jLabel14.setForeground(new java.awt.Color(94, 42, 43));
    jLabel14.setText("Contacto:");

    jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    jLabel15.setForeground(new java.awt.Color(94, 42, 43));
    jLabel15.setText("Email:");

    jTextField5.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
    jTextField5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(94, 42, 43)));
    jTextField5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField5ActionPerformed(evt);
        }
    });
    jTextField5.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jTextField5KeyPressed(evt);
        }
    });

    jTextField6.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
    jTextField6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(94, 42, 43)));
    jTextField6.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jTextField6KeyPressed(evt);
        }
    });

    jTextField7.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
    jTextField7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(94, 42, 43)));
    jTextField7.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField7ActionPerformed(evt);
        }
    });
    jTextField7.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jTextField7KeyPressed(evt);
        }
    });

    jButton2.setBackground(new java.awt.Color(94, 42, 43));
    jButton2.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
    jButton2.setForeground(new java.awt.Color(255, 255, 255));
    jButton2.setText("Concluido");
    //jButton2.setBorder(BorderFactory.createLineBorder(new Color(201, 169, 154), 2, true));
    jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jButton2MouseEntered(evt);
        }
    });
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/SIGBlogo300x300.png"))); // NOI18N

    jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    jLabel18.setForeground(new java.awt.Color(94, 42, 43));
    jLabel18.setText("Senha:");

    jTextField8.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
    jTextField8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(94, 42, 43)));
    jTextField8.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField8ActionPerformed(evt);
        }
    });
    jTextField8.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            jTextField8KeyPressed(evt);
        }
    });

    jTextField9.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
    jTextField9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(94, 42, 43)));
    jTextField9.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField9ActionPerformed(evt);
        }
    });

    jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    jLabel19.setForeground(new java.awt.Color(94, 42, 43));
    jLabel19.setText("Cargo:");

    jComboBox1.setBackground(new java.awt.Color(201, 169, 154));
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gestor", "Bibliotecario" }));
    jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jComboBox1MouseEntered(evt);
        }
    });

    javax.swing.GroupLayout RegistrarUtilizadoresPanelLayout = new javax.swing.GroupLayout(RegistrarUtilizadoresPanel);
    RegistrarUtilizadoresPanel.setLayout(RegistrarUtilizadoresPanelLayout);
    RegistrarUtilizadoresPanelLayout.setHorizontalGroup(
        RegistrarUtilizadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(RegistrarUtilizadoresPanelLayout.createSequentialGroup()
            .addGap(55, 55, 55)
            .addGroup(RegistrarUtilizadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(RegistrarUtilizadoresPanelLayout.createSequentialGroup()
                    .addGroup(RegistrarUtilizadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel18)
                        .addGroup(RegistrarUtilizadoresPanelLayout.createSequentialGroup()
                            .addGroup(RegistrarUtilizadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12)
                                .addComponent(jLabel9)
                                .addComponent(jLabel14)
                                .addComponent(jLabel15)
                                .addComponent(jLabel19))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(RegistrarUtilizadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                                .addComponent(jTextField5)
                                .addComponent(jTextField7, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                                .addComponent(jTextField8, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                                .addComponent(jTextField9, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGap(18, 18, 18)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(138, Short.MAX_VALUE))
    );
    RegistrarUtilizadoresPanelLayout.setVerticalGroup(
        RegistrarUtilizadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(RegistrarUtilizadoresPanelLayout.createSequentialGroup()
            .addGroup(RegistrarUtilizadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(RegistrarUtilizadoresPanelLayout.createSequentialGroup()
                    .addGap(81, 81, 81)
                    .addGroup(RegistrarUtilizadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(RegistrarUtilizadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(RegistrarUtilizadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(RegistrarUtilizadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(RegistrarUtilizadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(RegistrarUtilizadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(RegistrarUtilizadoresPanelLayout.createSequentialGroup()
                    .addGap(45, 45, 45)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(27, Short.MAX_VALUE))
    );

    jP01.add(RegistrarUtilizadoresPanel, "card3");

    AtividadeGestPanel.setBackground(new java.awt.Color(255, 255, 255));
    AtividadeGestPanel.setPreferredSize(new java.awt.Dimension(770, 406));

    jButton5.setBackground(new java.awt.Color(94, 42, 43));
    jButton5.setForeground(new java.awt.Color(255, 255, 255));
    jButton5.setText("Imprimir Relatório");
    jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jButton5MouseEntered(evt);
        }
    });
    jButton5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton5ActionPerformed(evt);
        }
    });

    jButton6.setBackground(new java.awt.Color(94, 42, 43));
    jButton6.setForeground(new java.awt.Color(255, 255, 255));
    jButton6.setText("Atualizar");
    jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jButton6MouseEntered(evt);
        }
    });
    jButton6.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton6ActionPerformed(evt);
        }
    });

    tabelaAtividades.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null},
            {null, null, null, null, null, null}
        },
        new String [] {
            "Data/Hora", "Utilizador", "Função", "Ação", "Detalhes", "Módulo"
        }
    ));
    tabelaAtividades.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tabelaAtividadesMouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            tabelaAtividadesMouseEntered(evt);
        }
    });
    jScrollPane2.setViewportView(tabelaAtividades);
    DefaultTableCellRenderer headerRenderer2 = new DefaultTableCellRenderer();
    headerRenderer2.setBackground(new java.awt.Color(201, 169, 154));
    headerRenderer2.setForeground(new java.awt.Color(94,42,43));
    headerRenderer2.setFont(new java.awt.Font("Times New Roman", java.awt.Font.ITALIC, 14));

    // Aplica em todas as colunas do cabeçalho
    for (int i = 0; i < tabelaAtividades.getColumnModel().getColumnCount(); i++) {
        tabelaAtividades.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer2);
    }

    btnLimparFiltro.setBackground(new java.awt.Color(201, 169, 154));
    btnLimparFiltro.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
    btnLimparFiltro.setText("Limpar");
    btnLimparFiltro.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            btnLimparFiltroMouseEntered(evt);
        }
    });
    btnLimparFiltro.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnLimparFiltroActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout AtividadeGestPanelLayout = new javax.swing.GroupLayout(AtividadeGestPanel);
    AtividadeGestPanel.setLayout(AtividadeGestPanelLayout);
    AtividadeGestPanelLayout.setHorizontalGroup(
        AtividadeGestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AtividadeGestPanelLayout.createSequentialGroup()
            .addGap(57, 57, 57)
            .addComponent(jButton6)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton5)
            .addGap(45, 45, 45))
        .addGroup(AtividadeGestPanelLayout.createSequentialGroup()
            .addGap(30, 30, 30)
            .addGroup(AtividadeGestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(btnLimparFiltro)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(32, Short.MAX_VALUE))
    );
    AtividadeGestPanelLayout.setVerticalGroup(
        AtividadeGestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(AtividadeGestPanelLayout.createSequentialGroup()
            .addGap(12, 12, 12)
            .addComponent(btnLimparFiltro)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(AtividadeGestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(15, Short.MAX_VALUE))
    );

    jP01.add(AtividadeGestPanel, "card4");
    /* ver todos os movimentos dos utilizadires, incluindo nomes, datas e funções.
     
    */

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jP01, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jP01, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE))
    );

    getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, 780, 470));

    pack();
    }// </editor-fold>//GEN-END:initComponents

   
    private void configurarPainelAtividades() {
    try {
        if (atividadeDAO != null && tabelaAtividades != null) {
            
            List<Atividade> lista = (List<Atividade>) atividadeDAO.listarTodasAtividades();
            DefaultTableModel model = (DefaultTableModel) tabelaAtividades.getModel();
            model.setRowCount(0);
            if (lista != null) {
                for (Atividade a : lista) {
                    model.addRow(new Object[]{
                        a.getDataHora(), 
                        a.getNomeUsuario(), 
                        a.getFuncaoUsuario(), 
                        a.getTipoAcao(), 
                        a.getDetalhes(), 
                        a.getModulo()
                    });
                }
            }
        }
    } catch (Exception ex) {
        logger.log(java.util.logging.Level.WARNING, "Erro ao configurar painel de atividades", ex);
    }
}

    private void tab1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab1MouseClicked
        // BiliotecaPanel
        UtilizadoresPanel.setVisible(true);
        RegistrarUtilizadoresPanel.setVisible(false);
        AtividadeGestPanel.setVisible(false);

        tab1.setBackground(Color.white);
        tab2.setBackground(new Color(94,42,43));
        tab3.setBackground(new Color(94,42,43));
    }//GEN-LAST:event_tab1MouseClicked

    private void tab1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab1MouseEntered
        // TODO add your handling code here:
        tab1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_tab1MouseEntered

    private void tab2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab2MouseClicked
        // Cadastrar Livros Panel
        RegistrarUtilizadoresPanel.setVisible(true);
        UtilizadoresPanel.setVisible(false);
        AtividadeGestPanel.setVisible(false);

        tab2.setBackground(Color.white);
        tab1.setBackground(new Color(94,42,43));
        tab3.setBackground(new Color(94,42,43));
    }//GEN-LAST:event_tab2MouseClicked

    private void tab2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab2MouseEntered
        // TODO add your handling code here:
        tab2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_tab2MouseEntered

    private void tab3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab3MouseClicked
        // AtidadePanel
        AtividadeGestPanel.setVisible(true);
        RegistrarUtilizadoresPanel.setVisible(false);
        UtilizadoresPanel.setVisible(false);

        tab3.setBackground(Color.white);
        tab2.setBackground(new Color(94,42,43));
        tab1.setBackground(new Color(94,42,43));
    }//GEN-LAST:event_tab3MouseClicked

    private void tab3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab3MouseEntered
        // TODO add your handling code here:
        tab3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_tab3MouseEntered

    private void txtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisarActionPerformed
        // TODO add your handling code here:

        //String termo = txtPesquisar.getText().trim().toLowerCase();

        // Exemplo de lógica de pesquisa
        /* if (painelLivros.isVisible()) {
            pesquisarLivros(termo);
        } else if (painelClientes.isVisible()) {
            pesquisarClientes(termo);
        } else if (painelEmprestimos.isVisible()) {
            pesquisarEmprestimos(termo);
        }
        }*/
    }//GEN-LAST:event_txtPesquisarActionPerformed
       // Pesquisa na lupa
    private void lupaLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lupaLabelMouseClicked
     
    String termo = txtPesquisar.getText().toLowerCase().trim();
    
    if (termo.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Digite algo para pesquisar!");
        return;
    }
    
    if (UtilizadoresPanel.isVisible()) {
        // Pesquisar utilizadores
        DefaultTableModel model = (DefaultTableModel) UtilizadorTable.getModel();
        model.setRowCount(0);
        
        boolean encontrou = false;
        
        // Pesquisar em Gestores
        for (Gestor gestor : gestorDAO.listarGestores()) {
            if (gestor.getNome().toLowerCase().contains(termo) ||
                String.valueOf(gestor.getId()).contains(termo) ||
                gestor.getBi().contains(termo) ||
                String.valueOf(gestor.getContacto()).contains(termo)) {
                
                model.addRow(new Object[]{
                    gestor.getId(),
                    gestor.getNome(),
                    gestor.getContacto(),
                    "Gestor"
                });
                encontrou = true;
            }
        }
        
        // Pesquisar em Bibliotecarios
        for (Bibliotecario bibliotecario : bibliotecarioDAO.listarBibliotecarios()) {
            if (bibliotecario.getNome().toLowerCase().contains(termo) ||
                String.valueOf(bibliotecario.getId()).contains(termo) ||
                bibliotecario.getBi().contains(termo) ||
                String.valueOf(bibliotecario.getContacto()).contains(termo)) {
                
                model.addRow(new Object[]{
                    bibliotecario.getId(),
                    bibliotecario.getNome(),
                    bibliotecario.getContacto(),
                    "Bibliotecario"
                });
                encontrou = true;
            }
        }
        
        if (!encontrou) {
            JOptionPane.showMessageDialog(this, "Nenhum utilizador encontrado com: " + termo);
        }
        
    } else if (AtividadeGestPanel.isVisible()) {
        pesquisarAtividades(termo);
    }

    }//GEN-LAST:event_lupaLabelMouseClicked

    private void lupaLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lupaLabelMouseEntered
        // TODO add your handling code here:
        lupaLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_lupaLabelMouseEntered

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
        // TODO add your handling code here:
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
      
    String nome = jTextField6.getText().trim();
    String bi = jTextField5.getText().trim();
    String contactoStr = jTextField7.getText().trim();
    String email = jTextField8.getText().trim();
    String senha = jTextField9.getText().trim();
    String cargo = (String) jComboBox1.getSelectedItem();
    
    // Validação
    if (nome.isEmpty() || bi.isEmpty() || contactoStr.isEmpty() || email.isEmpty() || senha.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Preencha todos os campos!", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    if (senha.length() < 4) {
        JOptionPane.showMessageDialog(this, "A senha deve ter pelo menos 4 caracteres!", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    try {
        int contacto = Integer.parseInt(contactoStr);
        int novoId = gerarNovoId(cargo);
        
        if ("Gestor".equals(cargo)) {
            // Verificar se ja existe gestor com este BI
            for (Gestor g : gestorDAO.listarGestores()) {
                if (g.getBi().equals(bi)) {
                    JOptionPane.showMessageDialog(this, "Já existe um Gestor com este BI!", "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            
            Gestor novoGestor = new Gestor(novoId, nome, bi, contacto, email, senha);
            gestorDAO.salvarGestor(novoGestor);
            
        } else {
            // Verificar se ja existe bibliotecario com este BI
            for (Bibliotecario b : bibliotecarioDAO.listarBibliotecarios()) {
                if (b.getBi().equals(bi)) {
                    JOptionPane.showMessageDialog(this, "Já existe um Bibliotecário com este BI!", "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            
            Bibliotecario novoBibliotecario = new Bibliotecario(novoId, nome, bi, contacto, email, senha);
            bibliotecarioDAO.salvarBibliotecario(novoBibliotecario);
        }
        
        JOptionPane.showMessageDialog(this, 
            cargo + " registrado com sucesso!\n" +
            "ID: " + novoId + "\n" +
            "Nome: " + nome + "\n" +
            "BI: " + bi, 
            "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        
        limparCamposRegistro();
        carregarTabelaUtilizadores();
        
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Contacto deve conter apenas números!", "Erro", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseEntered
        // TODO add your handling code here:
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jButton5MouseEntered
          //  Botao Imprimir Relatorio
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:

    try {
        // Verificar se há atividades
        if (tabelaAtividades.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, 
                "Não há atividades para gerar relatório!",
                "Sem Dados", 
                JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // Gerar relatorio completo
        String relatorio = gerarRelatorioCompletoAtividades();
        
        // Mostrar preview
        int option = JOptionPane.showConfirmDialog(this, 
            "Deseja imprimir relatório de TODAS as atividades?\n\n" +
            "Total de atividades: " + tabelaAtividades.getRowCount() + "\n\n" +
            "Preview:\n" + relatorio.substring(0, Math.min(200, relatorio.length())) + "...",
            "Confirmar Impressão", 
            JOptionPane.YES_NO_OPTION);
        
        if (option == JOptionPane.YES_OPTION) {
            // Simular impressão
            JOptionPane.showMessageDialog(this, 
                "Relatório completo enviado para impressão!\n" +
                "Total de atividades: " + tabelaAtividades.getRowCount(),
                "Impressão Concluída", 
                JOptionPane.INFORMATION_MESSAGE);
        }
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, 
            "Erro ao gerar relatório: " + e.getMessage(),
            "Erro", 
            JOptionPane.ERROR_MESSAGE);
    }
}

// METODO PARA GERAR RELATORIO COMPLETO
private String gerarRelatorioCompletoAtividades() {
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
    String dataImpressao = sdf.format(new Date());
    
    StringBuilder relatorio = new StringBuilder();
    relatorio.append("=== RELATÓRIO COMPLETO DE ATIVIDADES ===\n");
    relatorio.append("Data de impressão: ").append(dataImpressao).append("\n");
    relatorio.append("Total de atividades: ").append(tabelaAtividades.getRowCount()).append("\n");
    relatorio.append("=========================================\n\n");
    
    // Estatisticas
    int logins = 0, livros = 0, emprestimos = 0, utilizadores = 0;
    
    for (Atividade atividade : atividadeDAO.listarTodasAtividades()) {
        relatorio.append("Data: ").append(atividade.getDataHora()).append("\n");
        relatorio.append("Utilizador: ").append(atividade.getNomeUsuario()).append("\n");
        relatorio.append("Função: ").append(atividade.getFuncaoUsuario()).append("\n");
        relatorio.append("Ação: ").append(atividade.getTipoAcao()).append("\n");
        relatorio.append("Módulo: ").append(atividade.getModulo()).append("\n");
        relatorio.append("Descrição: ").append(atividade.getDetalhes()).append("\n");
        relatorio.append("Detalhes: ").append(atividade.getDadosExtras()).append("\n");
        relatorio.append("----------------------------------------\n");
        
        // Contar por modulo
        switch(atividade.getModulo()) {
            case "Autenticação": logins++; break;
            case "Gestão de Livros": livros++; break;
            case "Empréstimos": emprestimos++; break;
            case "Gestão de Utilizadores": utilizadores++; break;
        }
    }
    
    relatorio.append("\n=== ESTATÍSTICAS ===\n");
    relatorio.append("Logins/Logouts: ").append(logins).append("\n");
    relatorio.append("Gestão de Livros: ").append(livros).append("\n");
    relatorio.append("Empréstimos: ").append(emprestimos).append("\n");
    relatorio.append("Gestão de Utilizadores: ").append(utilizadores).append("\n");
    relatorio.append("=========================================\n");
    relatorio.append("Sistema SIGB - Relatório Administrativo");
    
    return relatorio.toString();

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseEntered
        // TODO add your handling code here:
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jButton6MouseEntered

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    // Botao Atualizar Atividades
 carregarTabelaAtividades();
    JOptionPane.showMessageDialog(this, 
        "Atividades atualizadas!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_jButton6ActionPerformed

    private void UtilizadorTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UtilizadorTableMouseClicked
      
    
    if (evt.getClickCount() == 2) { // Clique duplo
        int selectedRow = UtilizadorTable.getSelectedRow();
        if (selectedRow != -1) {
            mostrarDetalhesUtilizador(selectedRow);
        }
    }
}

private void mostrarDetalhesUtilizador(int linha) {
    int id = (Integer) UtilizadorTable.getValueAt(linha, 0);
    String nome = (String) UtilizadorTable.getValueAt(linha, 1);
    String contacto = UtilizadorTable.getValueAt(linha, 2).toString();
    String cargo = (String) UtilizadorTable.getValueAt(linha, 3);
    
    // Buscar informações adicionais
    String bi = "";
    String email = "";
    
    if ("Gestor".equals(cargo)) {
        Gestor gestor = null;
        for (Gestor g : gestorDAO.listarGestores()) {
            if (g.getId() == id) {
                gestor = g;
                break;
            }
        }
        if (gestor != null) {
            bi = gestor.getBi();
            email = gestor.getEmail();
        }
    } else {
        Bibliotecario bibliotecario = null;
        for (Bibliotecario b : bibliotecarioDAO.listarBibliotecarios()) {
            if (b.getId() == id) {
                bibliotecario = b;
                break;
            }
        }
        if (bibliotecario != null) {
            bi = bibliotecario.getBi();
            email = bibliotecario.getEmail();
        }
    }
    
    // Criar janela similar à DetalhesAtividade
    JFrame detalhesFrame = new JFrame("Detalhes do Utilizador");
    detalhesFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    detalhesFrame.setSize(500, 400);
    detalhesFrame.setLocationRelativeTo(this);
    detalhesFrame.setResizable(false);
    
    // Layout principal
    JPanel mainPanel = new JPanel(new BorderLayout(10, 10));
    mainPanel.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));
    
    // Título
    JLabel tituloLabel = new JLabel("DETALHES DO UTILIZADOR");
    tituloLabel.setFont(new Font("Times New Roman", Font.BOLD, 18));
    tituloLabel.setForeground(new Color(94, 42, 43));
    tituloLabel.setHorizontalAlignment(SwingConstants.CENTER);
    
    // Painel de detalhes
    JPanel detalhesPanel = new JPanel(new GridLayout(0, 2, 10, 10));
    detalhesPanel.setBorder(BorderFactory.createTitledBorder("Informações do Utilizador"));
    
    // Adicionar campos
    adicionarCampoUtilizador(detalhesPanel, "ID:", String.valueOf(id));
    adicionarCampoUtilizador(detalhesPanel, "Nome:", nome);
    adicionarCampoUtilizador(detalhesPanel, "Contacto:", contacto);
    adicionarCampoUtilizador(detalhesPanel, "Cargo:", cargo);
    adicionarCampoUtilizador(detalhesPanel, "BI:", bi);
    adicionarCampoUtilizador(detalhesPanel, "Email:", email);
    
    // Painel de botões - apenas Fechar
    JPanel buttonPanel = new JPanel(new FlowLayout());
    
    JButton btnFechar = new JButton("Fechar");
    btnFechar.setBackground(new Color(201, 169, 154));
    btnFechar.setForeground(new Color(94, 42, 43));
    btnFechar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    btnFechar.addActionListener(e -> detalhesFrame.dispose());
    
    buttonPanel.add(btnFechar);
    
    // Montar layout
    mainPanel.add(tituloLabel, BorderLayout.NORTH);
    mainPanel.add(detalhesPanel, BorderLayout.CENTER);
    mainPanel.add(buttonPanel, BorderLayout.SOUTH);
    
    detalhesFrame.add(mainPanel);
    detalhesFrame.setVisible(true);
}

private void adicionarCampoUtilizador(JPanel panel, String label, String valor) {
    JLabel lbl = new JLabel(label);
    lbl.setFont(new Font("Segoe UI", Font.BOLD, 12));
    
    JTextField field = new JTextField(valor != null ? valor : "");
    field.setEditable(false);
    field.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
    field.setBackground(Color.WHITE);
    field.setFont(new Font("Segoe UI", Font.PLAIN, 12));
    
    panel.add(lbl);
    panel.add(field);

    }//GEN-LAST:event_UtilizadorTableMouseClicked

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        // TODO add your handling code here:
         jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jButton1MouseEntered

    private void jComboBox1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseEntered
        // TODO add your handling code here:
         jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jComboBox1MouseEntered

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
      
    int selectedRow = UtilizadorTable.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Selecione um utilizador na tabela para remover!", "Aviso", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    int id = (Integer) UtilizadorTable.getValueAt(selectedRow, 0);
    String nome = (String) UtilizadorTable.getValueAt(selectedRow, 1);
    String cargo = (String) UtilizadorTable.getValueAt(selectedRow, 3);
    
    int confirm = JOptionPane.showConfirmDialog(this, 
        "Tem certeza que deseja remover?\n" +
        "Nome: " + nome + "\n" +
        "Cargo: " + cargo + "\n" +
        "ID: " + id,
        "Confirmar Remoção",
        JOptionPane.YES_NO_OPTION);
    
    if (confirm == JOptionPane.YES_OPTION) {
        if ("Gestor".equals(cargo)) {
            gestorDAO.removerGestor(id);
        } else {
            bibliotecarioDAO.removerBibliotecario(id);
        }
        
        JOptionPane.showMessageDialog(this, "Utilizador removido com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        carregarTabelaUtilizadores();
}

    }//GEN-LAST:event_jButton1ActionPerformed
            // Pesquisa com Enter
    private void txtPesquisarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPesquisarMousePressed
        // TODO add your handling code here:
     
        txtPesquisar.selectAll();
    }//GEN-LAST:event_txtPesquisarMousePressed
                 //  Botao Limpar Filtro
    private void btnLimparFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparFiltroActionPerformed
        // TODO add your handling code here:
       
    // Limpar campo de pesquisa
    txtPesquisar.setText("");
    
    // Recarregar tabela completa
    carregarTabelaAtividades();
    
    // Se tiver ComboBox de filtro, resetar
    if (comboFiltro != null) {
        comboFiltro.setSelectedIndex(0);
    }
    
    JOptionPane.showMessageDialog(this, 
        "Filtros limpos! Mostrando todas as atividades.",
        "Filtro Limpo", 
        JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_btnLimparFiltroActionPerformed
                            //METODO PRA VER DETALHES
    private void tabelaAtividadesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAtividadesMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) { // Clique duplo
        int selectedRow = tabelaAtividades.getSelectedRow();
    if (selectedRow == -1) {
        
        return;
    }
    
    // Buscar atividade completa
    String dataHora = (String) tabelaAtividades.getValueAt(selectedRow, 0);
    Atividade atividade = buscarAtividadePorDataHora(dataHora);
    
    if (atividade != null) {
        new DetalhesAtividade(atividade).setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, 
            "Detalhes não encontrados para esta atividade.",
            "Erro", JOptionPane.ERROR_MESSAGE);
    } 
   }
    }//GEN-LAST:event_tabelaAtividadesMouseClicked

    private void SairLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SairLabelMouseClicked
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, 
        "Deseja sair do sistema?", "Confirmar Saída", 
        JOptionPane.YES_NO_OPTION);
    if (confirm == JOptionPane.YES_OPTION) {
        new Login().setVisible(true);
         this.dispose();
    }
    }//GEN-LAST:event_SairLabelMouseClicked

    private void tabelaAtividadesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAtividadesMouseEntered
        // TODO add your handling code here:
         tabelaAtividades.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_tabelaAtividadesMouseEntered

    private void SairLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SairLabelMouseEntered
        // TODO add your handling code here:
         SairLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_SairLabelMouseEntered

    private void btnLimparFiltroMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLimparFiltroMouseEntered
        // TODO add your handling code here:
         btnLimparFiltro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_btnLimparFiltroMouseEntered

    private void UtilizadorTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UtilizadorTableMouseEntered
        // TODO add your handling code here:
         UtilizadorTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_UtilizadorTableMouseEntered

    private void jTextField6KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField6KeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jTextField5.requestFocus(); // Vai para o campo de BI
    }
    }//GEN-LAST:event_jTextField6KeyPressed

    private void jTextField5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField5KeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jTextField7.requestFocus(); // Vai para o campo de contacto
    }
    }//GEN-LAST:event_jTextField5KeyPressed

    private void jTextField7KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField7KeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jTextField8.requestFocus(); // Vai para o campo de email
    }
    }//GEN-LAST:event_jTextField7KeyPressed

    private void jTextField8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField8KeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jTextField9.requestFocus(); // Vai para o campo de senha
    }
    }//GEN-LAST:event_jTextField8KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new MenuAdm().setVisible(true));
    }
     //METODOS
    
    // BUSCAR ATIVIDADE COMPLETA
private Atividade buscarAtividadePorDataHora(String dataHora) {
    for (Atividade atividade : atividadeDAO.listarTodasAtividades()) {
        if (atividade.getDataHora().equals(dataHora)) {
            return atividade;
        }
    }
    return null;
}

// CARREGAR TABELA DE ATIVIDADES
private void carregarTabelaAtividades() {
    DefaultTableModel model = new DefaultTableModel(
        new Object[][] {},
        new String[] {"Data/Hora", "Utilizador", "Função", "Ação", "Módulo"}
    ) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // Tabela não editável
        }
    };
    
    tabelaAtividades.setModel(model);
    
    DefaultTableCellRenderer headerRenderer4 = new DefaultTableCellRenderer();
    headerRenderer4.setBackground(new java.awt.Color(201, 169, 154)); 
    headerRenderer4.setForeground(new java.awt.Color(94,42,43));                     
    headerRenderer4.setFont(new java.awt.Font("Times New Roman", java.awt.Font.ITALIC, 14));

       // Aplica em todas as colunas do cabeçalho
    for (int i = 0; i < tabelaAtividades.getColumnModel().getColumnCount(); i++) {
    tabelaAtividades.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer4);
  }
    
    // Carregar dados
    for (Atividade atividade : atividadeDAO.listarTodasAtividades()) {
        model.addRow(new Object[]{
            atividade.getDataHora(),
            atividade.getNomeUsuario(),
            atividade.getFuncaoUsuario(),
            atividade.getTipoAcao(),
            atividade.getModulo()
        });
    }
    
    // Ajustar largura das colunas
    tabelaAtividades.getColumnModel().getColumn(0).setPreferredWidth(120); // Data/Hora
    tabelaAtividades.getColumnModel().getColumn(1).setPreferredWidth(100); // Utilizador
    tabelaAtividades.getColumnModel().getColumn(2).setPreferredWidth(100); // Função
    tabelaAtividades.getColumnModel().getColumn(3).setPreferredWidth(150); // Ação
    tabelaAtividades.getColumnModel().getColumn(4).setPreferredWidth(100); // Módulo
}

   
    private int gerarNovoId(String cargo) {
    if ("Gestor".equals(cargo)) {
        return gestorDAO.listarGestores().size() + 1000;
    } else {
        return bibliotecarioDAO.listarBibliotecarios().size() + 2000;
    }
}
   
    private void configurarComboBoxCargo() {
    jComboBox1.removeAllItems();
    jComboBox1.addItem("Gestor");
    jComboBox1.addItem("Bibliotecario");
}
    
    /**
     * Carrega a tabela de utilizadores com dados de gestores e bibliotecários.
     * Combina dados de ambas as entidades em uma única visualização.
     */
    private void carregarTabelaUtilizadores() {
    DefaultTableModel model = (DefaultTableModel) UtilizadorTable.getModel();
    model.setRowCount(0); // Limpa a tabela
    
    // Carregar Gestores
    for (Gestor gestor : gestorDAO.listarGestores()) {
        model.addRow(new Object[]{
            gestor.getId(),
            gestor.getNome(),
            gestor.getContacto(),
            "Gestor"
        });
    }
    
    // Carregar Bibliotecarios
    for (Bibliotecario bibliotecario : bibliotecarioDAO.listarBibliotecarios()) {
        model.addRow(new Object[]{
            bibliotecario.getId(),
            bibliotecario.getNome(),
            bibliotecario.getContacto(),
            "Bibliotecario"
        });
    }
}
    


// CONFIGURAR FILTROS
private void configurarFiltros() {
    if (comboFiltro == null) {
        comboFiltro = new JComboBox<>();
        comboFiltro.addItem("Todas as atividades");
        comboFiltro.addItem("Apenas Logins");
        comboFiltro.addItem("Apenas Livros");
        comboFiltro.addItem("Apenas Empréstimos");
        comboFiltro.addItem("Apenas Utilizadores");
        comboFiltro.addItem("Apenas Gestores");
        comboFiltro.addItem("Apenas Bibliotecários");
        
        
        JPanel panelFiltro = new JPanel();
        panelFiltro.add(new JLabel("Filtrar:"));
        panelFiltro.add(comboFiltro);
        
        if (btnLimparFiltro == null) {
            btnLimparFiltro = new JButton("Limpar Filtro");
            btnLimparFiltro.addActionListener(e -> {
                comboFiltro.setSelectedIndex(0);
                carregarTabelaAtividades();
            });
            panelFiltro.add(btnLimparFiltro);
        }
        
        AtividadeGestPanel.add(panelFiltro, BorderLayout.NORTH);
    }
    
   
    comboFiltro.addActionListener(e -> aplicarFiltro());
}

// APLICAR FILTRO
private void aplicarFiltro() {
    String filtro = (String) comboFiltro.getSelectedItem();
    DefaultTableModel model = (DefaultTableModel) tabelaAtividades.getModel();
    model.setRowCount(0);
    
    List<Atividade> atividadesFiltradas = new ArrayList<>();
    
    try {
        switch (filtro) {
            case "Apenas Logins":
                atividadesFiltradas = (List<Atividade>) atividadeDAO.buscarPorModulo("Login");
                break;
            case "Apenas Livros":
                atividadesFiltradas = (List<Atividade>) atividadeDAO.buscarPorModulo("Livros");
                break;
            case "Apenas Empréstimos":
                atividadesFiltradas = (List<Atividade>) atividadeDAO.buscarPorModulo("Emprestimos");
                break;
            case "Apenas Utilizadores":
                atividadesFiltradas = (List<Atividade>) atividadeDAO.buscarPorModulo("Utilizadores");
                break;
            case "Apenas Gestores":
                atividadesFiltradas = (List<Atividade>) atividadeDAO.buscarPorFuncao("Gestor");
                break;
            case "Apenas Bibliotecários":
                atividadesFiltradas = (List<Atividade>) atividadeDAO.buscarPorFuncao("Bibliotecario");
                break;
            default:
                atividadesFiltradas = (List<Atividade>) atividadeDAO.listarTodasAtividades();
                break;
        }
        
        for (Atividade atividade : atividadesFiltradas) {
            model.addRow(new Object[]{
                atividade.getDataHora(),
                atividade.getNomeUsuario(),
                atividade.getFuncaoUsuario(),
                atividade.getTipoAcao(),
                atividade.getDetalhes(),
                atividade.getModulo()
            });
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro ao aplicar filtro: " + e.getMessage());
    }
}

private void carregarAtividadesAdm() {
    
    System.out.println("Carregando atividades do ADM...");
    // TODO: Implementar quando atividadeDAO estiver pronto
}

private void limparCamposRegistro() {
    jTextField6.setText("");
    jTextField5.setText("");
    jTextField7.setText("");
    jTextField8.setText("");
    jTextField9.setText("");
    jComboBox1.setSelectedIndex(0);
}

// MÉTODO PARA PESQUISAR ATIVIDADES
private void pesquisarAtividades(String termo) {
    DefaultTableModel model = (DefaultTableModel) tabelaAtividades.getModel();
    model.setRowCount(0);
    
    boolean encontrou = false;
    
    try {
        // Pesquisar em todas as atividades
        for (Atividade atividade : atividadeDAO.listarTodasAtividades()) {
            // Verificar se o termo está em qualquer campo da atividade
            if (atividade.getDataHora().toLowerCase().contains(termo) ||
                atividade.getNomeUsuario().toLowerCase().contains(termo) ||
                atividade.getFuncaoUsuario().toLowerCase().contains(termo) ||
                atividade.getTipoAcao().toLowerCase().contains(termo) ||
                atividade.getDetalhes().toLowerCase().contains(termo) ||
                atividade.getModulo().toLowerCase().contains(termo) ||
                (atividade.getDadosExtras() != null && atividade.getDadosExtras().toLowerCase().contains(termo))) {
                
                model.addRow(new Object[]{
                    atividade.getDataHora(),
                    atividade.getNomeUsuario(),
                    atividade.getFuncaoUsuario(),
                    atividade.getTipoAcao(),
                    atividade.getDetalhes(),
                    atividade.getModulo()
                });
                encontrou = true;
            }
        }
        
        if (!encontrou) {
            JOptionPane.showMessageDialog(this, 
                "Nenhuma atividade encontrada com: " + termo, 
                "Pesquisa", 
                JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Mostrar quantos resultados foram encontrados
            JOptionPane.showMessageDialog(this, 
                "Encontradas " + model.getRowCount() + " atividades com: " + termo, 
                "Resultados da Pesquisa", 
                JOptionPane.INFORMATION_MESSAGE);
        }
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, 
            "Erro ao pesquisar atividades: " + e.getMessage(), 
            "Erro", 
            JOptionPane.ERROR_MESSAGE);
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AtividadeGestPanel;
    private javax.swing.JPanel RegistrarUtilizadoresPanel;
    private javax.swing.JLabel SairLabel;
    private javax.swing.JTable UtilizadorTable;
    private javax.swing.JPanel UtilizadoresPanel;
    private javax.swing.JButton btnLimparFiltro;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jP01;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JLabel lupaLabel;
    private javax.swing.JPanel tab1;
    private javax.swing.JPanel tab2;
    private javax.swing.JPanel tab3;
    private javax.swing.JTable tabelaAtividades;
    private javax.swing.JTextField txtPesquisar;
    // End of variables declaration//GEN-END:variables
}
