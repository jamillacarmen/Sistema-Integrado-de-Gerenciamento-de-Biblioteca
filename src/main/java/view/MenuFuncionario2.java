
package view;

import DAO.*;
import controller.RegistroAtividade;
import model.*;
import java.awt.*;
import java.util.List;
import java.util.ArrayList;
import java.awt.event.KeyEvent;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import java.awt.Color;
import java.awt.Font;
import java.time.LocalDate;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.DefaultListModel;
import model.Livros;
import model.Visitantes; 
import model.Emprestimos;
import controller.SistemaLogin;

/**
 * Janela principal do funcionário/bibliotecário.
 * Gerencia visitantes, empréstimos e atividades da biblioteca.
 */


public class MenuFuncionario2 extends javax.swing.JFrame {
    
    /**
     * Construtor que inicializa a interface do funcionário.
     * Configura painéis, contadores e carrega dados iniciais.
     */
    
    private String nomeFuncionarioLogado;
    private VisitantesDAO visitantesDAO = new VisitantesDAO();
    private LivrosDAO livroDAO = new LivrosDAO();
    private EmprestimosDAO emprestimoDAO = new EmprestimosDAO();
    private AtividadeDAO atividadeDAO = new AtividadeDAO();
    private int contadorVisitantes = 0;
    private int contadorLivrosEmprestados = 0;
    private ConfiguracaoDAO configDAO = new ConfiguracaoDAO(); 
    private String nomeUsuario = "Funcionario";

public void setNomeUsuario(String nome) {
    this.nomeUsuario = nome;
}
   
   
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(MenuFuncionario2.class.getName());

       public MenuFuncionario2() {
        initComponents();
        
       String nomeUsuario = Login.usuarioLogadoGlobal;
    this.setTitle("Bibliotecário/a - " + nomeUsuario);
    
        setLocationRelativeTo(null);
    setResizable(false);
        // Configurar visibilidade inicial
    
       BibliotecaPanel.setVisible(true);
        VisitantesPanel.setVisible(false);
        EmpestimoPanel.setVisible(false);
        LivroEmprestadosPanel.setVisible(false);
        AtividadeBiblioPanel.setVisible(false);
        
        // Contador automatico
    contadorVisitantes = visitantesDAO.contarVisitantesHoje();
    txtVisitasCont1.setText("   " + contadorVisitantes);

        carregarBiblioteca();
        carregarVisitantes();
        carregarLivrosEmprestados();
        carregarAtividadeBiblio();
        configurarComponentes();
        atualizarContadores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tab1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tab2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        tab3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tab4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        tab5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        SairLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtPesquisar = new javax.swing.JTextField();
        lupaLabel = new javax.swing.JLabel();
        jP01 = new javax.swing.JPanel();
        BibliotecaPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BibliotecaTable = new javax.swing.JTable();
        EmpestimoPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jSpinner1 = new javax.swing.JSpinner();
        jButton2 = new javax.swing.JButton();
        LivroEmprestadosPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btnDetalhes = new javax.swing.JButton();
        AtividadeBiblioPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        VisitantesPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txtVisitasCont1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jSpinner2 = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(920, 470));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(94, 42, 43));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tab1.setBackground(new java.awt.Color(94, 42, 43));
        tab1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tab1MouseEntered(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(201, 169, 154));
        jLabel2.setText("Biblioteca");

        javax.swing.GroupLayout tab1Layout = new javax.swing.GroupLayout(tab1);
        tab1.setLayout(tab1Layout);
        tab1Layout.setHorizontalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab1Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(29, 29, 29))
        );
        tab1Layout.setVerticalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(tab1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 140, 30));

        tab2.setBackground(new java.awt.Color(94, 42, 43));
        tab2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tab2MouseEntered(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(201, 169, 154));
        jLabel4.setText("Visitantes");

        javax.swing.GroupLayout tab2Layout = new javax.swing.GroupLayout(tab2);
        tab2.setLayout(tab2Layout);
        tab2Layout.setHorizontalGroup(
            tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab2Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(32, 32, 32))
        );
        tab2Layout.setVerticalGroup(
            tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(tab2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 140, 30));

        tab3.setBackground(new java.awt.Color(94, 42, 43));
        tab3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tab3MouseEntered(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(201, 169, 154));
        jLabel3.setText("Conceder Empréstimo");

        javax.swing.GroupLayout tab3Layout = new javax.swing.GroupLayout(tab3);
        tab3.setLayout(tab3Layout);
        tab3Layout.setHorizontalGroup(
            tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab3Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(0, 4, Short.MAX_VALUE))
        );
        tab3Layout.setVerticalGroup(
            tab3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jPanel1.add(tab3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 140, 30));

        tab4.setBackground(new java.awt.Color(94, 42, 43));
        tab4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tab4MouseEntered(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(201, 169, 154));
        jLabel5.setText("Emprestados");

        javax.swing.GroupLayout tab4Layout = new javax.swing.GroupLayout(tab4);
        tab4.setLayout(tab4Layout);
        tab4Layout.setHorizontalGroup(
            tab4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab4Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(28, 28, 28))
        );
        tab4Layout.setVerticalGroup(
            tab4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(tab4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 140, 30));

        tab5.setBackground(new java.awt.Color(94, 42, 43));
        tab5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tab5MouseEntered(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(201, 169, 154));
        jLabel6.setText("Minha Atividade");

        javax.swing.GroupLayout tab5Layout = new javax.swing.GroupLayout(tab5);
        tab5.setLayout(tab5Layout);
        tab5Layout.setHorizontalGroup(
            tab5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        tab5Layout.setVerticalGroup(
            tab5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(tab5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 140, 30));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/SIGBlogo200x200.png"))); // NOI18N
        jLabel16.setText("jLabel16");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(-50, 0, 190, 110));

        SairLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/Exit50x85.png"))); // NOI18N
        SairLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SairLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SairLabelMouseEntered(evt);
            }
        });
        jPanel1.add(SairLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, -1, 80));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 141, 480));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(94, 42, 43));

        txtPesquisar.setBackground(new java.awt.Color(94, 42, 43));
        txtPesquisar.setFont(new java.awt.Font("Serif", 0, 12)); // NOI18N
        txtPesquisar.setForeground(new java.awt.Color(255, 255, 255));
        txtPesquisar.setText("Pesquisar...");
        txtPesquisar.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(201, 169, 154)));
        txtPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisarActionPerformed(evt);
            }
        });
        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });

        lupaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/Lupa35x35.png"))); // NOI18N
        lupaLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lupaLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lupaLabelMouseEntered(evt);
            }
        });
        lupaLabel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lupaLabelKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lupaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lupaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        jP01.setBackground(new java.awt.Color(255, 255, 255));
        jP01.setMaximumSize(new java.awt.Dimension(770, 406));
        jP01.setMinimumSize(new java.awt.Dimension(770, 406));
        jP01.setPreferredSize(new java.awt.Dimension(770, 420));
        jP01.setLayout(new java.awt.CardLayout());

        BibliotecaPanel.setBackground(new java.awt.Color(255, 255, 255));
        BibliotecaPanel.setMaximumSize(new java.awt.Dimension(770, 406));
        BibliotecaPanel.setMinimumSize(new java.awt.Dimension(770, 406));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        BibliotecaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Titulo", "Genero", "Autor", "Disponiveis"
            }
        )
        {
            public boolean isCellEditable(int row, int column) {
                return false; // Torna a tabela não editável
            }
        }
    );
    jScrollPane1.setViewportView(BibliotecaTable);
    DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
    headerRenderer.setBackground(new java.awt.Color(201, 169, 154));
    headerRenderer.setForeground(new java.awt.Color(94,42,43));
    headerRenderer.setFont(new java.awt.Font("Times New Roman", java.awt.Font.ITALIC, 14));

    // Aplica em todas as colunas do cabeçalho
    for (int i = 0; i < BibliotecaTable.getColumnModel().getColumnCount(); i++) {
        BibliotecaTable.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
    }

    javax.swing.GroupLayout BibliotecaPanelLayout = new javax.swing.GroupLayout(BibliotecaPanel);
    BibliotecaPanel.setLayout(BibliotecaPanelLayout);
    BibliotecaPanelLayout.setHorizontalGroup(
        BibliotecaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(BibliotecaPanelLayout.createSequentialGroup()
            .addGap(14, 14, 14)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(31, Short.MAX_VALUE))
    );
    BibliotecaPanelLayout.setVerticalGroup(
        BibliotecaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BibliotecaPanelLayout.createSequentialGroup()
            .addContainerGap(53, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(44, 44, 44))
    );

    jP01.add(BibliotecaPanel, "card2");

    EmpestimoPanel.setBackground(new java.awt.Color(255, 255, 255));
    EmpestimoPanel.setMaximumSize(new java.awt.Dimension(770, 406));
    EmpestimoPanel.setMinimumSize(new java.awt.Dimension(770, 406));
    EmpestimoPanel.setPreferredSize(new java.awt.Dimension(770, 406));

    jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    jLabel9.setForeground(new java.awt.Color(94, 42, 43));
    jLabel9.setText("Nome:");

    jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    jLabel12.setForeground(new java.awt.Color(94, 42, 43));
    jLabel12.setText("Contacto:");

    jLabel14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    jLabel14.setForeground(new java.awt.Color(94, 42, 43));
    jLabel14.setText("BI:");

    jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    jLabel15.setForeground(new java.awt.Color(94, 42, 43));
    jLabel15.setText("Endereço");

    jTextField5.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
    jTextField5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(94, 42, 43)));
    jTextField5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField5ActionPerformed(evt);
        }
    });

    jTextField6.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
    jTextField6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(94, 42, 43)));

    jTextField7.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
    jTextField7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(94, 42, 43)));

    jTextField8.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
    jTextField8.setText("Bairro/Av/Rua/Quarteirão/Casa");
    jTextField8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(94, 42, 43)));

    jList1.setBackground(new java.awt.Color(201, 169, 154));
    jList1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
    jList1.setForeground(new java.awt.Color(94, 42, 43));
    jList1.setModel(new javax.swing.AbstractListModel<String>() {
        String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
        public int getSize() { return strings.length; }
        public String getElementAt(int i) { return strings[i]; }
    });
    jList1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jList1MouseEntered(evt);
        }
    });
    jScrollPane3.setViewportView(jList1);

    jSpinner1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
    jSpinner1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jSpinner1MouseEntered(evt);
        }
    });

    jButton2.setBackground(new java.awt.Color(94, 42, 43));
    jButton2.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
    jButton2.setForeground(new java.awt.Color(255, 255, 255));
    jButton2.setText("Conceder");
    //jButton2.setBorder(BorderFactory.createLineBorder(new Color(201, 169, 154), 2, true));
    jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jButton2MouseEntered(evt);
        }
    });
    jButton2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton2ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout EmpestimoPanelLayout = new javax.swing.GroupLayout(EmpestimoPanel);
    EmpestimoPanel.setLayout(EmpestimoPanelLayout);
    EmpestimoPanelLayout.setHorizontalGroup(
        EmpestimoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(EmpestimoPanelLayout.createSequentialGroup()
            .addGap(55, 55, 55)
            .addGroup(EmpestimoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(EmpestimoPanelLayout.createSequentialGroup()
                    .addComponent(jLabel15)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jTextField8, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                .addGroup(EmpestimoPanelLayout.createSequentialGroup()
                    .addGroup(EmpestimoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel12)
                        .addComponent(jLabel9)
                        .addComponent(jLabel14))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(EmpestimoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jTextField6)
                        .addComponent(jTextField5)
                        .addComponent(jTextField7, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE))))
            .addGap(62, 62, 62)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(60, 60, 60)
            .addGroup(EmpestimoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(29, Short.MAX_VALUE))
    );
    EmpestimoPanelLayout.setVerticalGroup(
        EmpestimoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(EmpestimoPanelLayout.createSequentialGroup()
            .addGap(76, 76, 76)
            .addGroup(EmpestimoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(EmpestimoPanelLayout.createSequentialGroup()
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(31, 31, 31)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(EmpestimoPanelLayout.createSequentialGroup()
                    .addGroup(EmpestimoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(EmpestimoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(EmpestimoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(EmpestimoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap(176, Short.MAX_VALUE))
    );

    jP01.add(EmpestimoPanel, "card4");

    LivroEmprestadosPanel.setBackground(new java.awt.Color(255, 255, 255));
    LivroEmprestadosPanel.setMaximumSize(new java.awt.Dimension(770, 406));
    LivroEmprestadosPanel.setMinimumSize(new java.awt.Dimension(770, 406));
    LivroEmprestadosPanel.setPreferredSize(new java.awt.Dimension(770, 406));

    jTable3.setFont(new java.awt.Font("Times New Roman", 0, 12));
    jTable3.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null},
            {null, null, null, null, null}
        },
        new String [] {
            "Data de solicitação", "Nome", "Livro ID", "Valor", "Multa"
        }
    ) {
        public boolean isCellEditable(int row, int column) {
            return false; // Torna a tabela não editável
        }
    }
    );
    jTable3.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    jTable3.setRowSelectionAllowed(true);
    jTable3.setColumnSelectionAllowed(false);
    jTable3.setFocusable(true);
    jTable3.setGridColor(new java.awt.Color(255, 255, 255));
    jTable3.setSelectionBackground(new java.awt.Color(255, 255, 255));
    jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable3MouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jTable3MouseEntered(evt);
        }
    });
    jScrollPane4.setViewportView(jTable3);
    DefaultTableCellRenderer headerRenderer3 = new DefaultTableCellRenderer();
    headerRenderer3.setBackground(new java.awt.Color(201, 169, 154));
    headerRenderer3.setForeground(new java.awt.Color(94,42,43));
    headerRenderer3.setFont(new java.awt.Font("Times New Roman", java.awt.Font.ITALIC, 14));

    for (int i = 0; i < jTable3.getColumnModel().getColumnCount(); i++) {
        jTable3.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer3);
    }

    jButton3.setBackground(new java.awt.Color(201, 169, 154));
    jButton3.setForeground(new java.awt.Color(94, 42, 42));
    jButton3.setText("Atualizar");
    jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jButton3MouseEntered(evt);
        }
    });
    jButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton3ActionPerformed(evt);
        }
    });

    jButton4.setBackground(new java.awt.Color(201, 169, 154));
    jButton4.setForeground(new java.awt.Color(94, 42, 43));
    jButton4.setText("Imprimir Recibo");
    jButton4.setInheritsPopupMenu(true);
    jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jButton4MouseEntered(evt);
        }
    });
    jButton4.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton4ActionPerformed(evt);
        }
    });

    btnDetalhes.setBackground(new java.awt.Color(94, 42, 43));
    btnDetalhes.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    btnDetalhes.setForeground(new java.awt.Color(255, 255, 255));
    btnDetalhes.setText("Detalhes");
    btnDetalhes.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnDetalhesActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout LivroEmprestadosPanelLayout = new javax.swing.GroupLayout(LivroEmprestadosPanel);
    LivroEmprestadosPanel.setLayout(LivroEmprestadosPanelLayout);
    LivroEmprestadosPanelLayout.setHorizontalGroup(
        LivroEmprestadosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(LivroEmprestadosPanelLayout.createSequentialGroup()
            .addGap(63, 63, 63)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(81, Short.MAX_VALUE))
        .addGroup(LivroEmprestadosPanelLayout.createSequentialGroup()
            .addGap(60, 60, 60)
            .addComponent(btnDetalhes)
            .addGap(18, 18, 18)
            .addComponent(jButton3)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton4)
            .addGap(165, 165, 165))
    );
    LivroEmprestadosPanelLayout.setVerticalGroup(
        LivroEmprestadosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(LivroEmprestadosPanelLayout.createSequentialGroup()
            .addGap(32, 32, 32)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(LivroEmprestadosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(LivroEmprestadosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(btnDetalhes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap(28, Short.MAX_VALUE))
    );

    jP01.add(LivroEmprestadosPanel, "card5");

    AtividadeBiblioPanel.setBackground(new java.awt.Color(255, 255, 255));
    AtividadeBiblioPanel.setMaximumSize(new java.awt.Dimension(770, 406));
    AtividadeBiblioPanel.setMinimumSize(new java.awt.Dimension(770, 406));
    AtividadeBiblioPanel.setPreferredSize(new java.awt.Dimension(770, 406));

    jTable4.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
    jTable4.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null},
            {null, null, null}
        },
        new String [] {
            "Data de solicitação", "Nome", "Livro ID"
        }
    ));
    jTable4.setGridColor(new java.awt.Color(255, 255, 255));
    jTable4.setSelectionBackground(new java.awt.Color(255, 255, 255));
    jScrollPane5.setViewportView(jTable4);
    DefaultTableCellRenderer headerRenderer4 = new DefaultTableCellRenderer();
    headerRenderer4.setBackground(new java.awt.Color(201, 169, 154));
    headerRenderer4.setForeground(new java.awt.Color(94,42,43));
    headerRenderer4.setFont(new java.awt.Font("Times New Roman", java.awt.Font.ITALIC, 14));

    // Aplica em todas as colunas do cabeçalho
    for (int i = 0; i < jTable4.getColumnModel().getColumnCount(); i++) {
        jTable4.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer4);
    }

    jTextField9.setBackground(new java.awt.Color(201, 169, 154));
    jTextField9.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
    jTextField9.setForeground(new java.awt.Color(255, 255, 255));
    jTextField9.setText("  0");

    jTextField10.setBackground(new java.awt.Color(94, 42, 43));
    jTextField10.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
    jTextField10.setForeground(new java.awt.Color(255, 255, 255));
    jTextField10.setText("  0");
    jTextField10.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField10ActionPerformed(evt);
        }
    });

    jLabel10.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
    jLabel10.setForeground(new java.awt.Color(94, 42, 43));
    jLabel10.setText("Visitas");

    jLabel11.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
    jLabel11.setForeground(new java.awt.Color(94, 42, 43));
    jLabel11.setText("Livros Empestados");

    jButton5.setBackground(new java.awt.Color(94, 42, 43));
    jButton5.setForeground(new java.awt.Color(255, 255, 255));
    jButton5.setText("Imprimir Relatório");
    jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jButton5MouseEntered(evt);
        }
    });
    jButton5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton5ActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout AtividadeBiblioPanelLayout = new javax.swing.GroupLayout(AtividadeBiblioPanel);
    AtividadeBiblioPanel.setLayout(AtividadeBiblioPanelLayout);
    AtividadeBiblioPanelLayout.setHorizontalGroup(
        AtividadeBiblioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AtividadeBiblioPanelLayout.createSequentialGroup()
            .addGroup(AtividadeBiblioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(AtividadeBiblioPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jButton5))
                .addGroup(AtividadeBiblioPanelLayout.createSequentialGroup()
                    .addGroup(AtividadeBiblioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(AtividadeBiblioPanelLayout.createSequentialGroup()
                            .addGap(64, 64, 64)
                            .addGroup(AtividadeBiblioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(AtividadeBiblioPanelLayout.createSequentialGroup()
                                    .addGap(23, 23, 23)
                                    .addComponent(jLabel10))
                                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(AtividadeBiblioPanelLayout.createSequentialGroup()
                            .addGap(54, 54, 54)
                            .addComponent(jLabel11)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(17, 17, 17))
    );
    AtividadeBiblioPanelLayout.setVerticalGroup(
        AtividadeBiblioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(AtividadeBiblioPanelLayout.createSequentialGroup()
            .addGroup(AtividadeBiblioPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(AtividadeBiblioPanelLayout.createSequentialGroup()
                    .addGap(56, 56, 56)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(AtividadeBiblioPanelLayout.createSequentialGroup()
                    .addGap(65, 65, 65)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jLabel10)
                    .addGap(30, 30, 30)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jLabel11)))
            .addGap(18, 18, 18)
            .addComponent(jButton5)
            .addContainerGap(19, Short.MAX_VALUE))
    );

    jP01.add(AtividadeBiblioPanel, "card6");

    VisitantesPanel.setBackground(new java.awt.Color(255, 255, 255));
    VisitantesPanel.setMaximumSize(new java.awt.Dimension(770, 406));
    VisitantesPanel.setMinimumSize(new java.awt.Dimension(770, 406));
    VisitantesPanel.setPreferredSize(new java.awt.Dimension(770, 406));

    jTable2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
    jTable2.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Nome", "Contacto", "ID", "Titulo"
        }
    ));
    jTable2.setGridColor(new java.awt.Color(255, 255, 255));
    jTable2.setSelectionBackground(new java.awt.Color(255, 255, 255));
    jScrollPane2.setViewportView(jTable2);
    DefaultTableCellRenderer headerRenderer2 = new DefaultTableCellRenderer();
    headerRenderer2.setBackground(new java.awt.Color(201, 169, 154));
    headerRenderer2.setForeground(new java.awt.Color(94,42,43));
    headerRenderer2.setFont(new java.awt.Font("Times New Roman", java.awt.Font.ITALIC, 14));

    for (int i = 0; i < jTable2.getColumnModel().getColumnCount(); i++) {
        jTable2.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer2);
    }

    jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
    jLabel7.setText("Nome:");

    jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
    jLabel8.setText("Contacto:");

    jTextField2.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
    jTextField2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(94, 42, 43)));

    jTextField3.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
    jTextField3.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(94, 42, 43)));
    jTextField3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField3ActionPerformed(evt);
        }
    });

    jButton1.setBackground(new java.awt.Color(201, 169, 154));
    jButton1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    jButton1.setForeground(new java.awt.Color(94, 42, 43));
    jButton1.setText("Feito");
    jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jButton1MouseEntered(evt);
        }
    });
    jButton1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton1ActionPerformed(evt);
        }
    });

    txtVisitasCont1.setBackground(new java.awt.Color(201, 169, 154));
    txtVisitasCont1.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
    txtVisitasCont1.setForeground(new java.awt.Color(255, 255, 255));
    txtVisitasCont1.setText("   0");
    txtVisitasCont1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            txtVisitasCont1ActionPerformed(evt);
        }
    });

    jLabel13.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
    jLabel13.setForeground(new java.awt.Color(94, 42, 43));
    jLabel13.setText("Visitas");

    jComboBox1.setBackground(new java.awt.Color(201, 169, 154));
    jComboBox1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    jComboBox1.setForeground(new java.awt.Color(94, 42, 43));
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
    jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jComboBox1MouseEntered(evt);
        }
    });

    jSpinner2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
    jSpinner2.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));
    jSpinner2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jSpinner2MouseEntered(evt);
        }
    });

    javax.swing.GroupLayout VisitantesPanelLayout = new javax.swing.GroupLayout(VisitantesPanel);
    VisitantesPanel.setLayout(VisitantesPanelLayout);
    VisitantesPanelLayout.setHorizontalGroup(
        VisitantesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(VisitantesPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(VisitantesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(VisitantesPanelLayout.createSequentialGroup()
                    .addComponent(jScrollPane2)
                    .addContainerGap())
                .addGroup(VisitantesPanelLayout.createSequentialGroup()
                    .addGap(14, 14, 14)
                    .addGroup(VisitantesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(VisitantesPanelLayout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jButton1)
                        .addGroup(VisitantesPanelLayout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(18, 18, 18)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(61, 61, 61)
                    .addGroup(VisitantesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                    .addGroup(VisitantesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VisitantesPanelLayout.createSequentialGroup()
                            .addComponent(txtVisitasCont1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(117, 117, 117))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VisitantesPanelLayout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addGap(128, 128, 128))))))
    );
    VisitantesPanelLayout.setVerticalGroup(
        VisitantesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(VisitantesPanelLayout.createSequentialGroup()
            .addGroup(VisitantesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(VisitantesPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(txtVisitasCont1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(VisitantesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(VisitantesPanelLayout.createSequentialGroup()
                            .addGap(14, 14, 14)
                            .addComponent(jButton1))
                        .addGroup(VisitantesPanelLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel13))))
                .addGroup(VisitantesPanelLayout.createSequentialGroup()
                    .addGroup(VisitantesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(VisitantesPanelLayout.createSequentialGroup()
                            .addGap(13, 13, 13)
                            .addGroup(VisitantesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(VisitantesPanelLayout.createSequentialGroup()
                            .addGap(15, 15, 15)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(VisitantesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(VisitantesPanelLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(VisitantesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(VisitantesPanelLayout.createSequentialGroup()
                            .addGap(14, 14, 14)
                            .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGap(44, 44, 44)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGap(30, 30, 30))
    );

    jP01.add(VisitantesPanel, "card3");

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jP01, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jP01, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE))
    );

    getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, 780, 470));

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tab1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab1MouseClicked
        // BiliotecaPanel
        BibliotecaPanel.setVisible(true);
        VisitantesPanel.setVisible(false);
        EmpestimoPanel.setVisible(false);
        LivroEmprestadosPanel.setVisible(false);
        AtividadeBiblioPanel.setVisible(false);
        tab1.setBackground(Color.white);
        tab2.setBackground(new Color(94,42,43));
        tab3.setBackground(new Color(94,42,43));
        tab4.setBackground(new Color(94,42,43));
        tab5.setBackground(new Color(94,42,43));
    }//GEN-LAST:event_tab1MouseClicked

    private void tab2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab2MouseClicked
        // Visitantes Panel
        VisitantesPanel.setVisible(true);
        BibliotecaPanel.setVisible(false);
        EmpestimoPanel.setVisible(false);
        LivroEmprestadosPanel.setVisible(false);
        AtividadeBiblioPanel.setVisible(false);

        tab2.setBackground(Color.white);
        tab1.setBackground(new Color(94,42,43));
        tab3.setBackground(new Color(94,42,43));
        tab4.setBackground(new Color(94,42,43));
        tab5.setBackground(new Color(94,42,43));
    }//GEN-LAST:event_tab2MouseClicked

    private void tab3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab3MouseClicked
        // Conceder Emprestimo Panel
        EmpestimoPanel.setVisible(true);
        VisitantesPanel.setVisible(false);
        BibliotecaPanel.setVisible(false);
        LivroEmprestadosPanel.setVisible(false);
        AtividadeBiblioPanel.setVisible(false);

        tab3.setBackground(Color.white);
        tab2.setBackground(new Color(94,42,43));
        tab1.setBackground(new Color(94,42,43));
        tab4.setBackground(new Color(94,42,43));
        tab5.setBackground(new Color(94,42,43));
    }//GEN-LAST:event_tab3MouseClicked

    private void tab4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab4MouseClicked
        // Emprestados Panel
        LivroEmprestadosPanel.setVisible(true);
        VisitantesPanel.setVisible(false);
        EmpestimoPanel.setVisible(false);
        BibliotecaPanel.setVisible(false);
        AtividadeBiblioPanel.setVisible(false);

        tab4.setBackground(Color.white);
        tab2.setBackground(new Color(94,42,43));
        tab3.setBackground(new Color(94,42,43));
        tab1.setBackground(new Color(94,42,43));
        tab5.setBackground(new Color(94,42,43));
    }//GEN-LAST:event_tab4MouseClicked

    private void tab5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab5MouseClicked
        // Minha AtidadePanel
        AtividadeBiblioPanel.setVisible(true);
        VisitantesPanel.setVisible(false);
        EmpestimoPanel.setVisible(false);
        LivroEmprestadosPanel.setVisible(false);
        BibliotecaPanel.setVisible(false);

        tab5.setBackground(Color.white);
        tab2.setBackground(new Color(94,42,43));
        tab3.setBackground(new Color(94,42,43));
        tab4.setBackground(new Color(94,42,43));
        tab1.setBackground(new Color(94,42,43));
    }//GEN-LAST:event_tab5MouseClicked

    private void txtPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisarActionPerformed
        // TODO add your handling code here:

        //String termo = txtPesquisar.getText().trim().toLowerCase();

        // Exemplo de lógica de pesquisa
        /* if (painelLivros.isVisible()) {
            pesquisarLivros(termo);
        } else if (painelClientes.isVisible()) {
            pesquisarClientes(termo);
        } else if (painelEmprestimos.isVisible()) {
            pesquisarEmprestimos(termo);
        }
        }*/
    }//GEN-LAST:event_txtPesquisarActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void txtVisitasCont1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVisitasCont1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVisitasCont1ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed
          // btn atualizar se tiver multa vai aparecer (se nao for paga depois de 7 dias)
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

    // Recalcular multas e atualizar display
    double totalMultas = 0;
    
    for (Emprestimos emp : emprestimoDAO.listarEmprestimos()) {
        double multa = emprestimoDAO.calcularMulta(emp);
        if (multa > 0) {
            totalMultas += multa;
        }
    }
    
    carregarLivrosEmprestados();
    
    if (totalMultas > 0) {
        JOptionPane.showMessageDialog(this, 
            "Lista atualizada!\nMultas pendentes: " + totalMultas + " MZN");
    } else {
        JOptionPane.showMessageDialog(this, "Lista atualizada!\nSem multas pendentes.");
    }

    }//GEN-LAST:event_jButton3ActionPerformed
             // btn imprimir recibo
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        /* btn imprimir recibo,
        ( incluir todos os dados do livro e do emprestador)*/
    
    int selectedRow = jTable3.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Selecione um empréstimo na tabela!");
        return;
    }
    
    String data = (String) jTable3.getValueAt(selectedRow, 0);
    String nome = (String) jTable3.getValueAt(selectedRow, 1);
    String valor = (String) jTable3.getValueAt(selectedRow, 3);
    String multa = (String) jTable3.getValueAt(selectedRow, 4);
    
    // Simular impressao de recibo
    String recibo = "=== RECIBO DE EMPRÉSTIMO ===\n" +
                   "Cliente: " + nome + "\n" +
                   "Data do empréstimo: " + data + "\n" +
                   "Valor: " + valor + "\n" +
                   "Multa: " + multa + "\n" +
                   "Data do recibo: " + java.time.LocalDate.now() + "\n" +
                   "Bibliotecário: Sistema SIGB\n" +
                   "=============================";
    
    JOptionPane.showMessageDialog(this, recibo, "Recibo Impresso", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10ActionPerformed
               // Imprimir Relatorio
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
     
    int totalVisitantes = contadorVisitantes;
    int totalEmprestimos = contadorLivrosEmprestados;
    double totalMultas = 0;
    
    // Calcular total de multas
    for (Emprestimos emp : (List<Emprestimos>) emprestimoDAO.listarEmprestimos()) {
        totalMultas += emprestimoDAO.calcularMulta(emp);
    }
    
    double taxaEmprestimo = configDAO.getTaxaEmprestimo();
    
    String relatorio = "=== RELATÓRIO DO BIBLIOTECÁRIO ===\n" +
                      "Data: " + java.time.LocalDate.now() + "\n" +
                      "Total de visitantes: " + totalVisitantes + "\n" +
                      "Total de empréstimos: " + totalEmprestimos + "\n" +
                      "Taxa atual por livro: " + taxaEmprestimo + " MZN\n" +
                      "Total em multas: " + totalMultas + " MZN\n" +
                      "Receita total: " + (totalEmprestimos * taxaEmprestimo) + " MZN\n" +
                      "============================";
    
    JOptionPane.showMessageDialog(this, relatorio, "Relatório do Bibliotecário", JOptionPane.INFORMATION_MESSAGE);
     

        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void lupaLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lupaLabelMouseEntered
        // TODO add your handling code here:
        lupaLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

    }//GEN-LAST:event_lupaLabelMouseEntered

    private void tab1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab1MouseEntered
        // TODO add your handling code here:
        tab1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

    }//GEN-LAST:event_tab1MouseEntered

    private void tab2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab2MouseEntered
        // TODO add your handling code here:
        tab2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

    }//GEN-LAST:event_tab2MouseEntered

    private void tab3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab3MouseEntered
        // TODO add your handling code here:
        tab3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

    }//GEN-LAST:event_tab3MouseEntered

    private void tab4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab4MouseEntered
        // TODO add your handling code here:
        tab4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

    }//GEN-LAST:event_tab4MouseEntered

    private void tab5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab5MouseEntered
        // TODO add your handling code here:
        tab5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

    }//GEN-LAST:event_tab5MouseEntered
                  // Clique na lupa para pesquisar
    private void lupaLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lupaLabelMouseClicked
      
    String termo = txtPesquisar.getText().trim().toLowerCase();
    
    if (termo.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Digite algo para pesquisar!");
        return;
    }
    
    if (BibliotecaPanel.isVisible()) {
        pesquisarLivros(termo);
    } else if (VisitantesPanel.isVisible()) {
        pesquisarVisitantes(termo);
    } else if (LivroEmprestadosPanel.isVisible()) {
        pesquisarEmprestimos(termo);
    } else {
        JOptionPane.showMessageDialog(this, "Pesquisa não disponível neste painel!");
    }
}

// METODOS AUXILIARES DE PESQUISA
private void pesquisarLivros(String termo) {
    DefaultTableModel model = (DefaultTableModel) BibliotecaTable.getModel();
    model.setRowCount(0);
    
    for (Livros livro : livroDAO.listarLivros()) {
        if (livro.getTitulo().toLowerCase().contains(termo) ||
            livro.getAutor().toLowerCase().contains(termo) ||
            livro.getGenero().toLowerCase().contains(termo) ||
            String.valueOf(livro.getIdLivro()).contains(termo)) {
            
            model.addRow(new Object[]{
                livro.getIdLivro(),
                livro.getTitulo(),
                livro.getGenero(), 
                livro.getAutor(),
                livro.getNumLivros()
            });
        }
    }
}

private void pesquisarVisitantes(String termo) {
    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
    model.setRowCount(0);
    
    List<Visitantes> visitantesEncontrados = visitantesDAO.buscarPorNome(termo);
    
    for (Visitantes visitante : visitantesEncontrados) {
        model.addRow(new Object[]{
            visitante.getNome(),
            visitante.getContacto(),
            "LIVRO-" + visitante.getLivroId(), // ID do livro
            visitante.getTituloLivro() // Titulo do livro
        });
    }
}

private void pesquisarEmprestimos(String termo) {
    DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
    model.setRowCount(0);
    
    for (Emprestimos emp : emprestimoDAO.buscarPorNome(termo)) {
        double multa = emprestimoDAO.calcularMulta(emp);
        model.addRow(new Object[]{
            emp.getDataLimite().minusDays(7).format(DateTimeFormatter.ofPattern("dd/MM/yyyy")),
            emp.getNome(),
            "EMP-" + emp.hashCode(),
            emp.getValor() + " MZN",
            multa > 0 ? multa + " MZN" : "Sem multa"
        });
    }



    }//GEN-LAST:event_lupaLabelMouseClicked

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        // TODO add your handling code here:
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

    }//GEN-LAST:event_jButton1MouseEntered

    private void jSpinner2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSpinner2MouseEntered
        // TODO add your handling code here:
        jSpinner2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

    }//GEN-LAST:event_jSpinner2MouseEntered

    private void jComboBox1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseEntered
        // TODO add your handling code here:
        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

    }//GEN-LAST:event_jComboBox1MouseEntered

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
        // TODO add your handling code here:
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

    }//GEN-LAST:event_jButton2MouseEntered

    private void jList1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseEntered
        // TODO add your handling code here:
        jList1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

    }//GEN-LAST:event_jList1MouseEntered

    private void jSpinner1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSpinner1MouseEntered
        // TODO add your handling code here:
        jSpinner1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

    }//GEN-LAST:event_jSpinner1MouseEntered

    private void jButton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseEntered
        // TODO add your handling code here:
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

    }//GEN-LAST:event_jButton3MouseEntered

    private void jButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseEntered
        // TODO add your handling code here:
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

    }//GEN-LAST:event_jButton4MouseEntered

    private void jButton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseEntered
        // TODO add your handling code here:
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

    }//GEN-LAST:event_jButton5MouseEntered
        // Registrar Visitantes
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
     String nome = jTextField2.getText().trim();
    String contacto = jTextField3.getText().trim();
    String livroSelecionado = (String) jComboBox1.getSelectedItem();
    
    if (nome.isEmpty() || contacto.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Preencha nome e contacto!");
        return;
    }
    
    String tituloLivro = "Consulta";
    int livroId = 0;
    
    // Buscar livro se selecionado
    if (livroSelecionado != null && !livroSelecionado.equals("Selecionar Livro")) {
        for (Livros livro : livroDAO.listarLivros()) {
            if (livro.getTitulo().equals(livroSelecionado)) {
                livroId = livro.getIdLivro();
                tituloLivro = livro.getTitulo();
                break;
            }
        }
    }
    
    if (livroSelecionado == null || livroSelecionado.equals("Selecionar Livro")) {
        JOptionPane.showMessageDialog(this, "Selecione um livro!");
        return;
    }
    
    LocalDate dataHoje = LocalDate.now();
    
    // Buscar o livro selecionado para obter ID e titulo 
    Livros livro = buscarLivroPorTitulo(livroSelecionado);
    if (livro == null) {
        JOptionPane.showMessageDialog(this, "Livro não encontrado!");
        return;
    }
    
    // Registrar visita com livro selecionado
    Visitantes visitante = new Visitantes(nome, contacto, 
        dataHoje, 
        livro.getIdLivro(), livro.getTitulo());
    
    visitantesDAO.registrarVisitante(visitante);
    
    
RegistroAtividade.registrarVisitante(
    this.nomeUsuario,    //NOME  DO FUNCIONÁRIO
    "Bibliotecario",            // Funcao  
    nome,                       // Nome do visitante
    contacto,                   // Contacto do visitante
    tituloLivro                 // Livro consultado
);
    
    // Atualizar interface
    atualizarContadores();
    carregarVisitantes();
    
    JOptionPane.showMessageDialog(this, 
        "Visitante registrado com sucesso!\n" +
        "Livro selecionado: " + livro.getTitulo() + " (ID: LIVRO-" + livro.getIdLivro() + ")");
    
    // Limpar campos
    jTextField2.setText("");
    jTextField3.setText("");
    jComboBox1.setSelectedIndex(0);


    }//GEN-LAST:event_jButton1ActionPerformed
           // BOTAO Conceder Emprestimo
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
     
String nome = jTextField6.getText().trim();
    String contacto = jTextField5.getText().trim();
    String bi = jTextField7.getText().trim();
    String endereco = jTextField8.getText().trim();
    
     int quantidade = (Integer) jSpinner1.getValue();
    
    String livroSelecionado = jList1.getSelectedValue();
    if (livroSelecionado == null) {
        JOptionPane.showMessageDialog(this, "Selecione um livro!");
        return;
    }
    
    // Buscar livro  selecionado
    Livros livro = buscarLivroPorTitulo(livroSelecionado);
    if (livro == null) {
        JOptionPane.showMessageDialog(this, "Livro não encontrado!");
        return;
    }
    
    double taxa = configDAO.getTaxaEmprestimo();
    double valor = quantidade * taxa;
    LocalDateTime dataLimite = LocalDateTime.now().plusDays(7);
    
    // Criar empréstimo com ID  do livro
    Emprestimos emprestimo = new Emprestimos(
        nome, contacto, bi, taxa, endereco, dataLimite, 1,
        livro.getIdLivro(), 
        livro.getTitulo()   
    );
    
    emprestimoDAO.salvarEmprestimo(emprestimo);
    
RegistroAtividade.registrarEmprestimo(
   this.nomeUsuario,      // NOME  DO FUNCIONARIO
    "Bibliotecario",            // Funcao
    nome,                       // Nome do cliente
    bi,                         // BI do cliente
    quantidade,                 // Quantidade de livros
    valor,                      // Valor total
    "Livros emprestados: " + quantidade + " unidades"
);
    
    JOptionPane.showMessageDialog(this, 
        "Empréstimo concedido!\n" +
        "Livro: " + livro.getTitulo() + " (ID: LIVRO-" + livro.getIdLivro() + ")\n" +
        "Valor: " + taxa + " MZN\n" +
        "Devolução: " + dataLimite.format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));
    
    limparCamposEmprestimo();
    carregarLivrosEmprestados();
    atualizarContadores();


    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        // TODO add your handling code here:
     String termo = txtPesquisar.getText().toLowerCase();
    
    if (BibliotecaPanel.isVisible()) {
        // Pesquisar na biblioteca
        DefaultTableModel model = (DefaultTableModel) BibliotecaTable.getModel();
        model.setRowCount(0);
        
        for (Livros livro : livroDAO.listarLivros()) {
            if (livro.getTitulo().toLowerCase().contains(termo) ||
                livro.getAutor().toLowerCase().contains(termo) ||
                String.valueOf(livro.getIdLivro()).contains(termo)) {
                
                model.addRow(new Object[]{
                    livro.getIdLivro(), 
                    livro.getTitulo(),     
                    livro.getGenero(), 
                    livro.getAutor(), 
                    livro.getNumLivros()
                });
            }
        }
    } else if (VisitantesPanel.isVisible()) {
        // Pesquisar nos visitantes 
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        
        java.util.List<Visitantes> visitantesEncontrados = visitantesDAO.buscarPorNome(termo);
        java.util.List<Emprestimos> todosEmprestimos = emprestimoDAO.listarEmprestimos();
        
        for (Visitantes visitante : visitantesEncontrados) {
            String livroId = "LIVRO-" + visitante.getLivroId(); 
            String tituloLivro = visitante.getTituloLivro();
            
            // Buscar emprestimo correspondente
            for (Emprestimos emp : todosEmprestimos) {
                if (emp.getNome().equals(visitante.getNome()) && 
                    emp.getContacto().equals(visitante.getContacto())) {
                    livroId = "EMP-" + emp.hashCode();
                    tituloLivro = "Livro Emprestado";
                    break;
                }
            }
            
            model.addRow(new Object[]{
                visitante.getNome(),
                visitante.getContacto(),
                livroId,        
                tituloLivro    
            });
        }
    }


    }//GEN-LAST:event_txtPesquisarKeyReleased
              // pesquisar no enter
    private void lupaLabelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lupaLabelKeyPressed
        // TODO add your handling code here:

    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        // Simula o clique na lupa quando pressionar Enter
        lupaLabelMouseClicked(null);
    }
    }//GEN-LAST:event_lupaLabelKeyPressed

    private void SairLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SairLabelMouseClicked
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this,
            "Deseja sair do sistema?", "Confirmar Saída",
            JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            new Login().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_SairLabelMouseClicked

    private void SairLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SairLabelMouseEntered
        // TODO add your handling code here:
        SairLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_SairLabelMouseEntered

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
         int row = jTable3.rowAtPoint(evt.getPoint());
        int col = jTable3.columnAtPoint(evt.getPoint());
        
        if (row >= 0 && col >= 0) {
            jTable3.setRowSelectionInterval(row, row);
            System.out.println("Linha " + row + " selecionada");
        }
    }//GEN-LAST:event_jTable3MouseClicked

    private void btnDetalhesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetalhesActionPerformed
        // TODO add your handling code here:
                                                   
    int selectedRow = jTable3.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Selecione um empréstimo na tabela!", "Aviso", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    try {
        String nomeCliente = jTable3.getValueAt(selectedRow, 1).toString();
        
        // Buscar emprestimo completo
        Emprestimos emprestimo = null;
        for (Emprestimos emp : emprestimoDAO.listarEmprestimos()) {
            if (emp.getNome().equals(nomeCliente)) {
                emprestimo = emp;
                break;
            }
        }
        
        if (emprestimo != null) {
            String detalhes = "=== DETALHES COMPLETOS ===\n" +
                             "Nome: " + emprestimo.getNome() + "\n" +
                             "Contacto: " + emprestimo.getContacto() + "\n" +
                             "BI: " + emprestimo.getBi() + "\n" +
                             "Endereço: " + emprestimo.getEndereco() + "\n" +
                             "Livro: " + emprestimo.getTituloLivro() + "\n" +
                             "ID do Livro: " + emprestimo.getLivroId() + "\n" +
                             "Valor: " + emprestimo.getValor() + " MZN\n" +
                             "Data de Empréstimo: " + 
                             emprestimo.getDataLimite().minusDays(7).format(DateTimeFormatter.ofPattern("dd/MM/yyyy")) + "\n" +
                             "Data de Devolução: " + 
                             emprestimo.getDataLimite().format(DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            
            JOptionPane.showMessageDialog(this, detalhes, "Detalhes do Empréstimo", JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
    }
                                                  
    }//GEN-LAST:event_btnDetalhesActionPerformed

    private void jTable3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseEntered
        // TODO add your handling code here:
         jTable3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jTable3MouseEntered
      
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new MenuFuncionario2().setVisible(true));
    }
    
    // METODOS 
    
    private void atualizarContadores() {
   
    contadorVisitantes = visitantesDAO.contarVisitantesHoje();
    txtVisitasCont1.setText("   " + contadorVisitantes);
    jTextField9.setText("   " + contadorVisitantes);
    
    
    contadorLivrosEmprestados = emprestimoDAO.listarEmprestimos().size();
    jTextField10.setText("   " + contadorLivrosEmprestados);
}
    
   // Metodo auxiliar para buscar livro por titulo
private Livros buscarLivroPorTitulo(String titulo) {
    for (Livros livro : livroDAO.listarLivros()) {
        if (livro.getTitulo().equals(titulo)) {
            return livro;
        }
    }
    return null;
} 
    
         //metodo para extrair dados dos livros
    private int extrairLivroId(String textoLivro) {
    try {
        
        if (textoLivro.contains("(ID:")) {
            String idStr = textoLivro.substring(textoLivro.indexOf("(ID:") + 4, textoLivro.indexOf(")"));
            return Integer.parseInt(idStr.trim());
        }
    } catch (Exception e) {
        logger.warning("Erro ao extrair ID do livro: " + e.getMessage());
    }
    return 0;
}

private String extrairTituloLivro(String textoLivro) {
    if (textoLivro.contains("(ID:")) {
        return textoLivro.substring(0, textoLivro.indexOf("(ID:")).trim();
    }
    return textoLivro;
}
    
    private void limparCamposEmprestimo() {
    jTextField6.setText("");
    jTextField5.setText("");
    jTextField7.setText("");
    jTextField8.setText("Bairro/Av/Rua/Quarteirão/Casa");
    jSpinner1.setValue(1);
    jList1.clearSelection();
}
    
    private void carregarVisitantes() {
    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
    model.setRowCount(0);
    
    List<Visitantes> visitantes = visitantesDAO.listarVisitantes();
    
    for (Visitantes visitante : visitantes) {
        model.addRow(new Object[]{
            visitante.getNome(),
            visitante.getContacto(),
            "LIVRO-" + visitante.getLivroId(), 
            visitante.getTituloLivro() 
        });
    }
}
    
  private void configurarComponentes() {
    // ComboBox de visitantes - mostrar todos os livros DISPONIVEIS
    
    jComboBox1.removeAllItems();
    jComboBox1.addItem("Selecionar Livro");
    
    // JList de emprestimos - mostrar titulos 
    DefaultListModel<String> listModel = new DefaultListModel<>();
    
    for (Livros livro : livroDAO.listarLivros()) {
        if (livro.isStatus() && livro.getNumLivros() > 0) {
            jComboBox1.addItem(livro.getTitulo());
            listModel.addElement(livro.getTitulo()); 
        }
    }
    jList1.setModel(listModel);
}
    
   private void carregarLivrosEmprestados() {
    DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
    model.setRowCount(0);
    
    List<Emprestimos> emprestimos = emprestimoDAO.listarEmprestimos();
    
    for (Emprestimos emp : emprestimos) {
        double multa = emprestimoDAO.calcularMulta(emp);
        
        
        String livroId = "LIVRO-" + emp.getLivroId();
        String tituloLivro = emp.getTituloLivro(); 
        
        model.addRow(new Object[]{
            emp.getDataLimite().minusDays(7).format(DateTimeFormatter.ofPattern("dd/MM/yyyy")),
            emp.getNome(),
            livroId, 
            emp.getValor() + " MZN",
            multa > 0 ? multa + " MZN" : "Sem multa"
        });
    }
    
    
}
    
    private void carregarAtividadeBiblio() {
    DefaultTableModel model = (DefaultTableModel) jTable4.getModel();
    model.setRowCount(0);
    
    List<Emprestimos> emprestimosAtivos = emprestimoDAO.listarEmprestimos();
    
    for (Emprestimos emp : emprestimosAtivos) {
        // Usar dados REAIS do livro
        String livroId = "LIVRO-" + emp.getLivroId();
        String tituloLivro = emp.getTituloLivro();
        
        model.addRow(new Object[]{
            emp.getDataLimite().minusDays(7).format(DateTimeFormatter.ofPattern("dd/MM/yyyy")),
            emp.getNome(),
            livroId, 
            tituloLivro 
        });
    }
    
    
}
    
    private void carregarBiblioteca() {
        DefaultTableModel model = (DefaultTableModel) BibliotecaTable.getModel();
        model.setRowCount(0);
        
        for (Livros livro : livroDAO.listarLivros()) {
            model.addRow(new Object[]{  
            livro.getIdLivro(), 
            livro.getTitulo(),      
            livro.getGenero(),       
            livro.getAutor(),       
            livro.getNumLivros() 
            });
        }
    }
    
    private void criarEmprestimoAutomatico(String nome, String contacto, String livroSelecionado) {
    try {
        // Buscar livro pelo titulo
        Livros livroSelecionadoObj = null;
        for (Livros livro : livroDAO.listarLivros()) {
            if (livro.getTitulo().equals(livroSelecionado)) {
                livroSelecionadoObj = livro;
                break;
            }
        }
        
        if (livroSelecionadoObj != null) {
            // Criar emprestimo
            double taxa = configDAO.getTaxaEmprestimo();
            LocalDateTime dataLimite = LocalDateTime.now().plusDays(7);
            
            Emprestimos emprestimo = new Emprestimos(
                nome, 
                contacto, 
                "BI-AUTO", // BI temporario
                taxa, 
                "Endereço não informado", 
                dataLimite, 
                1,
                livroSelecionadoObj.getIdLivro(), // ADICIONAR ID do livro
                livroSelecionadoObj.getTitulo()   // ADICIONAR título do livro
            );
            
            emprestimoDAO.salvarEmprestimo(emprestimo);
            
            // Atualizar estoque do livro
            livroSelecionadoObj.setNumLivros(livroSelecionadoObj.getNumLivros() - 1);
            livroDAO.atualizarLivro(livroSelecionadoObj);
        }
    } catch (Exception e) {
        logger.warning("Erro ao criar empréstimo automático: " + e.getMessage());
    }
}
    
    private void mostrarDetalhesEmprestimo(int rowIndex) {
    try {
        // Pegar o nome da tabela para buscar os dados completos
        String nomeCliente = (String) jTable3.getValueAt(rowIndex, 1);
        
        // Buscar o emprestimo completo no DAO
        Emprestimos emprestimo = null;
        for (Emprestimos emp : emprestimoDAO.listarEmprestimos()) {
            if (emp.getNome().equals(nomeCliente)) {
                emprestimo = emp;
                break;
            }
        }
        
        if (emprestimo != null) {
            // Criar mensagem com todos os detalhes
            String detalhes = "=== DETALHES DO EMPRÉSTIMO ===\n" +
                             "Nome: " + emprestimo.getNome() + "\n" +
                             "Contacto: " + emprestimo.getContacto() + "\n" +
                             "BI: " + emprestimo.getBi() + "\n" +
                             "Endereço: " + emprestimo.getEndereco() + "\n" +
                             "Livro ID: " + emprestimo.getLivroId() + "\n" +
                             "Título do Livro: " + emprestimo.getTituloLivro() + "\n" +
                             "Valor: " + emprestimo.getValor() + " MZN\n" +
                             "Data de Empréstimo: " + 
                             emprestimo.getDataLimite().minusDays(7).format(DateTimeFormatter.ofPattern("dd/MM/yyyy")) + "\n" +
                             "Data de Devolução: " + 
                             emprestimo.getDataLimite().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")) + "\n" +
                             "Multa: " + emprestimoDAO.calcularMulta(emprestimo) + " MZN\n" +
                             "==============================";
            
            JOptionPane.showMessageDialog(this, detalhes, "Detalhes do Empréstimo", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Empréstimo não encontrado!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Erro ao carregar detalhes: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AtividadeBiblioPanel;
    private javax.swing.JPanel BibliotecaPanel;
    private javax.swing.JTable BibliotecaTable;
    private javax.swing.JPanel EmpestimoPanel;
    private javax.swing.JPanel LivroEmprestadosPanel;
    private javax.swing.JLabel SairLabel;
    private javax.swing.JPanel VisitantesPanel;
    private javax.swing.JButton btnDetalhes;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jP01;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JLabel lupaLabel;
    private javax.swing.JPanel tab1;
    private javax.swing.JPanel tab2;
    private javax.swing.JPanel tab3;
    private javax.swing.JPanel tab4;
    private javax.swing.JPanel tab5;
    private javax.swing.JTextField txtPesquisar;
    private javax.swing.JTextField txtVisitasCont1;
    // End of variables declaration//GEN-END:variables
   
}

